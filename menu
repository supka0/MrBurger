import json
from collections import namedtuple

with open('menu.json', 'r', encoding='utf-8') as file:
    data = json.load(file)

MenuItem = namedtuple('MenuItem', 'name price')
Ingredient = namedtuple('Ingredient', 'name price')

menu_items = []
for item in data['menu_items']:
    name = item['name']
    price = item.get('price')
    menu_items.append(MenuItem(name, price))

burger_ingredients = [Ingredient(item['name'], item['price']) for item in data['burger_ingredients']]
double_burger_ingredients = [Ingredient(item['name'], item['price']) for item in data['double_burger_ingredients']]
cheeseburger_ingredients = [Ingredient(item['name'], item['price']) for item in data['cheeseburger_ingredients']]
double_cheeseburger_ingredients = [Ingredient(item['name'], item['price']) for item in data['double_cheeseburger_ingredients']]
crabsburger_ingredients = [Ingredient(item['name'], item['price']) for item in data['crabsburger_ingredients']]
shake_ingredients = [Ingredient(item['name'], item['price']) for item in data['shake_ingredients']]
shake_flavors = data['shake_flavors']
sauces = data['sauces']
sizes = data['sizes']

basket = []




def add_to_basket(item_name, customizations=None):
    basket.append((item_name, customizations))

def get_item_price(item_name):
    item = next((item for item in menu_items if item.name == item_name), None)
    return item.price if item is not None else 0

def get_customization_cost(customizations):
    cost = 0
    if customizations:
        ingredients, size, sauces, flavor = customizations
        cost += sum(ingr.price for ingr in ingredients)
        cost += sizes.get(size, 0)
        cost += sum(20 if sauce else 0 for sauce in sauces)
        cost += 20 if flavor and flavor != 'Классический' else 0
    return cost

def customize_item(item_name):
    ingredients = get_ingredients(item_name)
    size = None
    sauces = []
    flavor = None

    if ingredients:
        selected_ingredients = select_ingredients(ingredients)
    else:
        selected_ingredients = []

    if item_name in ['Картофель фри', 'Кока-кола', 'Фанта', 'Спрайт', 'Крылышки', 'Ножки', 'Нагетсы', 'Соус']:
        sauces = select_sauces(item_name)

    if item_name in ['Картофель фри', 'Кока-кола', 'Фанта', 'Спрайт', 'Крылышки', 'Ножки', 'Нагетсы']:
        size = select_size(item_name)

    if item_name == 'Шейк':
        flavor = select_shake_flavor(item_name)

    customizations = (selected_ingredients, size, sauces, flavor)
    add_to_basket(item_name, customizations)

def get_ingredients(item_name):
    if item_name == 'Гамбургер':
        return burger_ingredients
    elif item_name == 'Двойной Гамбургер':
        return double_burger_ingredients
    elif item_name == 'Чизбургер':
        return cheeseburger_ingredients
    elif item_name == 'Двойной Чизбургер':
        return double_cheeseburger_ingredients
    elif item_name == 'Крабсбургер':
        return crabsburger_ingredients
    elif item_name == 'Шейк':
        return shake_ingredients
    return []

def select_ingredients(ingredients):
    print('Выберите ингредиенты (введите номера через запятую):')
    for i, ingredient in enumerate(ingredients, 1):
        print(f'{i}. {ingredient.name} ({ingredient.price} руб.)')
    selected = input('Введите номера ингредиентов (или нажмите Enter, чтобы пропустить): ') or ''
    selected_ingredients = [ingredients[int(i)-1] for i in selected.split(',') if i.isdigit()]
    ingredient_costs = [f'{ingr.name} ({ingr.price} руб.)' for ingr in selected_ingredients]
    print(f'Выбранные ингредиенты: {", ".join(ingredient_costs)}')
    print(f'Стоимость добавочных ингредиентов: {sum(ingr.price for ingr in selected_ingredients)} руб.')
    return selected_ingredients

def select_size(item_name):
    print('Выберите размер порции:')
    for i, (size, price) in enumerate(sizes.items(), 1):
        print(f'{i}. {size} ({price} руб.)')
    choice = input('Введите номер размера: ')
    if choice.isdigit():
        selected_size = list(sizes.keys())[int(choice)-1]
    else:
        selected_size = 'Средний'
    print(f'Выбранный размер: {selected_size} ({sizes[selected_size]} руб.)')
    return selected_size

def select_sauces(item_name):
    print('Выберите соусы (введите номера через запятую):')
    for i, sauce in enumerate(sauces, 1):
        print(f'{i}. {sauce} ({20 if sauce else 0} руб.)')
    selected = input('Введите номера соусов (или нажмите Enter, чтобы пропустить): ') or ''
    selected_sauces = [sauces[int(i)-1] for i in selected.split(',') if i.isdigit()]
    sauce_costs = [f'{sauce} ({20 if sauce else 0} руб.)' for sauce in selected_sauces]
    print(f'Выбранные соусы: {", ".join(sauce_costs)}')
    print(f'Стоимость соусов: {sum(20 if sauce else 0 for sauce in selected_sauces)} руб.')
    return selected_sauces

def select_shake_flavor(item_name):
    print('Выберите вкус шейка:')
    for i, flavor in enumerate(shake_flavors, 1):
        print(f'{i}. {flavor} ({20 if flavor != "Классический" else 0} руб.)')
    choice = input('Введите номер вкуса: ')
    if choice.isdigit():
        selected_flavor = shake_flavors[int(choice)-1]
    else:
        selected_flavor = None
    if selected_flavor:
        print(f'Выбранный вкус: {selected_flavor} ({20 if selected_flavor != "Классический" else 0} руб.)')
    return selected_flavor

def print_basket():
    total_cost = 0
    print('Корзина:')
    for item_name, customizations in basket:
        item_price = get_item_price(item_name)
        customization_cost = get_customization_cost(customizations)
        current_item_cost = customization_cost
        if item_price is not None:
            current_item_cost += item_price
        total_cost += current_item_cost
        print(f'- {item_name}', end='')
        if item_price is not None:
            print(f' ({item_price})', end='')
        print()
        if customizations:
            ingredients, size, sauces, flavor = customizations
            if ingredients:
                print('   Ингредиенты:', ', '.join(f'{ingr.name} ({ingr.price} руб.)' for ingr in ingredients))
            if size:
                print(f'   Размер: {size} ({sizes.get(size, 0)} руб.)')
            if sauces:
                sauce_costs = [f'{sauce} ({20 if sauce else 0} руб.)' for sauce in sauces]
                print(f'   Соусы: {", ".join(sauce_costs)}')
            if flavor:
                print(f'   Вкус: {flavor} ({20 if flavor != "Классический" else 0} руб.)')
    print(f'Итоговая стоимость: {total_cost} руб.')

def process_payment(total_cost):
    total_cost = sum(get_item_price(item) + get_customization_cost(customizations) if get_item_price(item) is not None else get_customization_cost(customizations) for item, customizations in basket)
    if total_cost > 0:
        while True:
            payment_amount = input(f'Внесите сумму не менее {total_cost} руб. (или введите "отмена" для выхода): ')
            if payment_amount.lower() == 'отмена':
                return False
            try:
                payment_amount = float(payment_amount)
                if payment_amount >= total_cost:
                    change = payment_amount - total_cost
                    print(f'Спасибо за оплату! Ваша сдача: {change:.2f} руб.')
                    basket.clear()
                    return True
                else:
                    print(f'Недостаточно средств. Требуется еще {total_cost - payment_amount:.2f} руб.')
            except ValueError:
                print('Неверный формат суммы. Попробуйте снова.')
    else:
        print('Корзина пуста. Добавьте блюда в корзину для оформления заказа.')
        return False

def main():
    while True:
        print('Меню:')
        for i, item in enumerate(menu_items, 1):
            if item.price is None:
                print(f'{i}. {item.name}')
            else:
                print(f'{i}. {item.name} ({item.price}) руб.')
        print('0. Просмотр корзины')
        print('q. Выход')
        choice = input('Введите номер пункта меню: ').lower()
        if choice == 'q':
            break
        elif choice == '0':
            print_basket()
            process_payment(0)
        elif choice.isdigit() and 1 <= int(choice) <= len(menu_items):
            item_name = menu_items[int(choice)-1].name
            customize_item(item_name)
        else:
            print('Неверный выбор. Попробуйте снова.')


if __name__ == '__main__':
    main()
