from collections import namedtuple


MenuItem = namedtuple('MenuItem', 'name price')
Ingredient = namedtuple('Ingredient', 'name price')


menu_items = [
    MenuItem('Гамбургер', 120), MenuItem('Чизбургер', 180),
    MenuItem('Двойной Гамбургер', 240), MenuItem('Двойной Чизбургер', 360),
    MenuItem('Крабсбургер', 110), MenuItem('Картофель фри', 50),
    MenuItem('Кока-кола', 70), MenuItem('Фанта', 60),
    MenuItem('Спрайт', 50), MenuItem('Шейк', 100),
    MenuItem('Крылышки', 80), MenuItem('Ножки', 90),
    MenuItem('Нагетсы', 20), MenuItem('Соус', None)
]

burger_ingredients = [
    Ingredient('Котлета', 40), Ingredient('Сыр', 30),
    Ingredient('Салат', 10), Ingredient('Соус', 20),
    Ingredient('Помидор', 15)
]

double_burger_ingredients = [
    Ingredient('Двойная Котлета', 80), Ingredient('Сыр', 30),
    Ingredient('Салат', 10), Ingredient('Соус', 20),
    Ingredient('Помидор', 15)
]

cheeseburger_ingredients = [
    Ingredient('Котлета', 40), Ingredient('Тройной Сыр', 90),
    Ingredient('Салат', 10), Ingredient('Соус', 20)
]

double_cheeseburger_ingredients = [
    Ingredient('Двойная Котлета', 80), Ingredient('Тройной Сыр', 90),
    Ingredient('Салат', 10), Ingredient('Соус', 20)
]

crabsburger_ingredients = [
    Ingredient('Крабовые палочки', 50), Ingredient('Салат', 10),
    Ingredient('Соус', 20), Ingredient('Помидор', 15)
]

shake_ingredients = [
    Ingredient('Молоко', 10), Ingredient('Сироп', 15),
    Ingredient('Шоколад', 20), Ingredient('Орехи', 25)
]

shake_flavors = ['Классический', 'Шоколадный', 'Ванильный', 'Клубничный', 'Банановый']
sauces = ['Кетчуп', 'Чесночный', 'Барбекю', 'Сырный', 'Ранч', 'Кисло-сладкий']

sizes = {'Маленький': -20, 'Средний': 0, 'Большой': 20}

basket = []


def add_to_basket(item_name, customizations=None):
    basket.append((item_name, customizations))


def get_item_price(item_name):
    item = next((item for item in menu_items if item.name == item_name), None)
    return item.price if item is not None else 0


def get_customization_cost(customizations):
    cost = 0
    if customizations:
        ingredients, size, sauces, flavor = customizations
        cost += sum(ingr.price for ingr in ingredients)
        cost += sizes.get(size, 0)
        cost += sum(20 if sauce else 0 for sauce in sauces)
        cost += 20 if flavor and flavor != 'Классический' else 0
    return cost


def customize_item(item_name):
    ingredients = get_ingredients(item_name)
    size = None
    sauces = []
    flavor = None

    if ingredients:
        selected_ingredients = select_ingredients(ingredients)
    else:
        selected_ingredients = []

    if item_name in ['Картофель фри', 'Кока-кола', 'Фанта', 'Спрайт', 'Крылышки', 'Ножки', 'Нагетсы', 'Соус']:
        sauces = select_sauces(item_name)

    if item_name in ['Картофель фри', 'Кока-кола', 'Фанта', 'Спрайт', 'Крылышки', 'Ножки', 'Нагетсы']:
        size = select_size(item_name)

    if item_name == 'Шейк':
        flavor = select_shake_flavor(item_name)

    customizations = (selected_ingredients, size, sauces, flavor)
    add_to_basket(item_name, customizations)


def get_ingredients(item_name):
    if item_name == 'Гамбургер':
        return burger_ingredients
    elif item_name == 'Двойной Гамбургер':
        return double_burger_ingredients
    elif item_name == 'Чизбургер':
        return cheeseburger_ingredients
    elif item_name == 'Двойной Чизбургер':
        return double_cheeseburger_ingredients
    elif item_name == 'Крабсбургер':
        return crabsburger_ingredients
    elif item_name == 'Шейк':
        return shake_ingredients
    return []


def select_ingredients(ingredients):
    print('Выберите ингредиенты (введите номера через запятую):')
    for i, ingredient in enumerate(ingredients, 1):
        print(f'{i}. {ingredient.name} ({ingredient.price} руб.)')
    selected = input('Введите номера ингредиентов (или нажмите Enter, чтобы пропустить): ') or ''
    selected_ingredients = [ingredients[int(i)-1] for i in selected.split(',') if i.isdigit()]
    ingredient_costs = [f'{ingr.name} ({ingr.price} руб.)' for ingr in selected_ingredients]
    print(f'Выбранные ингредиенты: {", ".join(ingredient_costs)}')
    print(f'Стоимость добавочных ингредиентов: {sum(ingr.price for ingr in selected_ingredients)} руб.')
    return selected_ingredients


def select_size(item_name):
    print('Выберите размер порции:')
    for i, (size, price) in enumerate(sizes.items(), 1):
        print(f'{i}. {size} ({price} руб.)')
    choice = input('Введите номер размера: ')
    selected_size = list(sizes.keys())[int(choice)-1] if choice.isdigit() else 'Средний'
    print(f'Выбранный размер: {selected_size} ({sizes[selected_size]} руб.)')
    return selected_size


def select_sauces(item_name):
    print('Выберите соусы (введите номера через запятую):')
    for i, sauce in enumerate(sauces, 1):
        print(f'{i}. {sauce} ({20 if sauce else 0} руб.)')
    selected = input('Введите номера соусов (или нажмите Enter, чтобы пропустить): ') or ''
    selected_sauces = [sauces[int(i)-1] for i in selected.split(',') if i.isdigit()]
    sauce_costs = [f'{sauce} ({20 if sauce else 0} руб.)' for sauce in selected_sauces]
    print(f'Выбранные соусы: {", ".join(sauce_costs)}')
    print(f'Стоимость соусов: {sum(20 if sauce else 0 for sauce in selected_sauces)} руб.')
    return selected_sauces


def select_shake_flavor(item_name):
    print('Выберите вкус шейка:')
    for i, flavor in enumerate(shake_flavors, 1):
        print(f'{i}. {flavor} ({20 if flavor != "Классический" else 0} руб.)')
    choice = input('Введите номер вкуса: ')
    selected_flavor = shake_flavors[int(choice)-1] if choice.isdigit() else None
    if selected_flavor:
        print(f'Выбранный вкус: {selected_flavor} ({20 if selected_flavor != "Классический" else 0} руб.)')
    return selected_flavor


def print_basket():
    total_cost = 0
    print('Корзина:')
    for item_name, customizations in basket:
        item_price = get_item_price(item_name)
        customization_cost = get_customization_cost(customizations)
        current_item_cost = customization_cost
        if item_price is not None:
            current_item_cost += item_price
        total_cost += current_item_cost
        print(f'- {item_name}', end='')
        if item_price is not None:
            print(f' ({item_price})', end='')
        print()
        if customizations:
            ingredients, size, sauces, flavor = customizations
            if ingredients:
                print('   Ингредиенты:', ', '.join(f'{ingr.name} ({ingr.price} руб.)' for ingr in ingredients))
            if size:
                print(f'   Размер: {size} ({sizes.get(size, 0)} руб.)')
            if sauces:
                sauce_costs = [f'{sauce} ({20 if sauce else 0} руб.)' for sauce in sauces]
                print(f'   Соусы: {", ".join(sauce_costs)}')
            if flavor:
                print(f'   Вкус: {flavor} ({20 if flavor != "Классический" else 0} руб.)')
    print(f'Итоговая стоимость: {total_cost} руб.')


def process_payment(total_cost):
    total_cost = sum(get_item_price(item) + get_customization_cost(customizations) if get_item_price(item) is not None else get_customization_cost(customizations) for item, customizations in basket)
    if total_cost > 0:
        while True:
            payment_amount = input(f'Внесите сумму не менее {total_cost} руб. (или введите "отмена" для выхода): ')
            if payment_amount.lower() == 'отмена':
                return False
            try:
                payment_amount = float(payment_amount)
                if payment_amount >= total_cost:
                    change = payment_amount - total_cost
                    print(f'Спасибо за оплату! Ваша сдача: {change:.2f} руб.')
                    basket.clear()
                    return True
                else:
                    print(f'Недостаточно средств. Требуется еще {total_cost - payment_amount:.2f} руб.')
            except ValueError:
                print('Неверный формат суммы. Попробуйте снова.')
    else:
        print('Корзина пуста. Добавьте блюда в корзину для оформления заказа.')
        return False


def main():
    while True:
        print('Меню:')
        for i, item in enumerate(menu_items, 1):
            print(f'{i}. {item.name}', end='')
            if item.price is not None:
                print(f' ({item.price})')
            else:
                print()
        print('0. Просмотр корзины')
        print('q. Выход')
        choice = input('Введите номер пункта меню: ').lower()
        if choice == 'q':
            break
        elif choice == '0':
            print_basket()
            process_payment(0)
        elif choice.isdigit() and 1 <= int(choice) <= len(menu_items):
            item_name = menu_items[int(choice)-1].name
            customize_item(item_name)
        else:
            print('Неверный выбор. Попробуйте снова.')


if __name__ == '__main__':
    main()
