import hashlib
import json
import random
import string
import tkinter as tk
from tkinter import simpledialog, messagebox,ttk

def generate_unique_id():
    while True:
        new_id = ''.join(random.choices(string.digits, k=3)) + ''.join(random.choices(string.ascii_letters, k=3))
        if new_id not in [worker['id'] for worker in workers]:
            return new_id

def process_applications():
    for application in applications[:]:
        application_str = json.dumps(application, indent=2, ensure_ascii=False)
        response = messagebox.askquestion("Рассмотрение заявки", f"Заявка:\n{application_str}\n\nПринять?")
        if response == "yes":
            applications.remove(application)
            save_applications()
            new_worker = {
                "id": generate_unique_id(),
                "title": "Младший кассир",
                "application": application
            }
            workers.append(new_worker)
            save_workers()
        elif response == "no":
            applications.remove(application)
            save_applications()

def manage_workers():
    choice = messagebox.askquestion("Управление сотрудниками", "Уволить или повысить работника?")
    if choice == "no":
        fire_worker()
    elif choice == "yes":
        promote_worker()

def fire_worker():
    worker_id = simpledialog.askstring("Увольнение работника", "Введите ID работника для увольнения")
    if worker_id:
        for worker in workers:
            if worker['id'] == worker_id:
                workers.remove(worker)
                save_workers()
                messagebox.showinfo("Успешно", f"Работник с ID {worker_id} уволен.")
                break
        else:
            messagebox.showerror("Ошибка", f"Работник с ID {worker_id} не найден.")

def promote_worker():
    worker_id = simpledialog.askstring("Повышение работника", "Введите ID работника для повышения")
    if worker_id:
        for worker in workers:
            if worker['id'] == worker_id:
                if worker['title'] == "Младший кассир":
                    worker['title'] = "Старший кассир"
                    save_workers()
                    messagebox.showinfo("Успешно", f"Работник с ID {worker_id} повышен до Старшего кассира.")
                elif worker['title'] == "Старший кассир":
                    worker['title'] = "Менеджер"
                    save_workers()
                    messagebox.showinfo("Успешно", f"Работник с ID {worker_id} повышен до Менеджера.")
                else:
                    messagebox.showerror("Ошибка", f"Работник с ID {worker_id} уже является Менеджером, дальнейшее повышение невозможно.")
                break
        else:
            messagebox.showerror("Ошибка", f"Работник с ID {worker_id} не найден.")

def add_menu_item():
    name = simpledialog.askstring("Добавить блюдо", "Введите название блюда")
    if name:
        price = simpledialog.askinteger("Добавить блюдо", "Введите цену блюда")
        if price:
            new_item = {"name": name, "price": price}
            menu_data["menu_items"].append(new_item)
            save_menu_data()
            messagebox.showinfo("Успешно", f"Блюдо '{name}' добавлено в меню.")

def save_workers():
    with open("workers.json", "w", encoding="utf-8") as file:
        json.dump(workers, file, indent=2, ensure_ascii=False)

def save_applications():
    with open("applications.json", "w", encoding="utf-8") as file:
        json.dump(applications, file, indent=2, ensure_ascii=False)

def save_menu_data():
    with open("menu.json", "w", encoding="utf-8") as file:
        json.dump(menu_data, file, indent=2, ensure_ascii=False)

# Загрузка хеша пароля из файла
with open("password.txt", "r", encoding="utf-8") as file:
    PASSWORD = file.read().strip()

def check_password():
    password = simpledialog.askstring("Вход", "Введите пароль:", show="*")
    if password:
        hashed_password = hashlib.sha256(password.encode()).hexdigest()
        if hashed_password == PASSWORD:
            main_window()
        else:
            messagebox.showerror("Ошибка", "Неверный пароль.")

def main_window():
    root = tk.Tk()
    root.title("Управление персоналом и меню")

    main_frame = ttk.Frame(root, padding=20)
    main_frame.grid()

    process_applications_button = ttk.Button(main_frame, text="Рассмотреть заявки", command=process_applications)
    process_applications_button.grid(row=0, column=0, padx=10, pady=10)

    fire_worker_button = ttk.Button(main_frame, text="Уволить работника", command=fire_worker)
    fire_worker_button.grid(row=1, column=0, padx=10, pady=10)

    promote_worker_button = ttk.Button(main_frame, text="Повысить работника", command=promote_worker)
    promote_worker_button.grid(row=2, column=0, padx=10, pady=10)

    add_menu_item_button = ttk.Button(main_frame, text="Добавить блюдо в меню", command=add_menu_item)
    add_menu_item_button.grid(row=3, column=0, padx=10, pady=10)

    exit_button = ttk.Button(main_frame, text="Выйти", command=root.quit)
    exit_button.grid(row=4, column=0, padx=10, pady=10)

    root.mainloop()

# Загрузка данных из файлов
with open("workers.json", "r", encoding="utf-8") as file:
    workers = json.load(file)

with open("applications.json", "r", encoding="utf-8") as file:
    applications = json.load(file)

with open("menu.json", "r", encoding="utf-8") as file:
    menu_data = json.load(file)

check_password()
