import telebot
from telebot import types
import json

bot = telebot.TeleBot('Token')

user_state = {}

with open('employees.json', 'r') as employees:
    employees_1 = json.load(employees)

# Обработчик команды /start
@bot.message_handler(commands=['start'])
def password_start(message):
    user_state[message.chat.id] = "waiting_password"
    bot.reply_to(message, 'Введите пароль для дальнейшей работы')


@bot.message_handler(func=lambda message: True)
def password_message(message):
    if user_state.get(message.chat.id) == "waiting_password":
        if message.text == '1646868':
            bot.reply_to(message, 'Правильный пароль')
            del user_state[message.chat.id]
            accept_button = types.KeyboardButton('Принять сотрудника')
            reject_button = types.KeyboardButton('Отклонить сотрудника')
            keyboard = types.ReplyKeyboardMarkup(row_width=1)
            keyboard.add(accept_button, reject_button)
            bot.send_message(message.chat.id, 'Выберите действие:', reply_markup=keyboard)
        else:
            bot.reply_to(message, 'Неверный пароль: ' + message.text)
    else:
        bot.reply_to(message, 'Простите, я не понимаю. Введите /start для начала')

# Обработчик кнопок
@bot.message_handler(func=lambda message: message.text in ['Принять сотрудника', 'Отклонить сотрудника'])
def handle_button(message):
    if message.text == 'Принять сотрудника':
        # Ваш код для принятия сотрудника
        bot.reply_to(message, 'Сотрудник принят')
    elif message.text == 'Отклонить сотрудника':
        # Ваш код для отклонения сотрудника
        bot.reply_to(message, 'Выберите сотрудника для отклонения:')
        for employee in employees_1:
            bot.send_message(message.chat.id, f"Имя сотрудника: {employee['name']}")
            bot.register_next_step_handler(message, reject_employee)

def reject_employee(message):
    for idx, employee in enumerate(employees_1):
        if employee['name'] == message.text:
            del employees_1[idx]
            bot.reply_to(message, f"Сотрудник {message.text} удален")
            # После удаления сотрудника из списка обновляем JSON файл
            with open('employees.json', 'w') as file:
                json.dump(employees_1, file, indent=4)
            return
    bot.reply_to(message, f"Сотрудник {message.text} не найден")

# Запускаем бота
bot.polling()
